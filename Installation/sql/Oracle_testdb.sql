----------------------------------------------------------------------
-- Optional: List all existing users (requires DBA privileges)
SELECT username FROM dba_users;
----------------------------------------------------------------------

----------------------------------------------------------------------
-- Step 1: Create a new user (schema) called TestUser with password MyPassword.
-- This command must be executed as a DBA.
----------------------------------------------------------------------
CREATE USER TestUser IDENTIFIED BY MyPassword;
-- This creates a new schema named TestUser.

----------------------------------------------------------------------
-- Step 2: Grant necessary privileges to TestUser for connecting and creating objects.
----------------------------------------------------------------------
GRANT CONNECT, RESOURCE TO TestUser;

----------------------------------------------------------------------
-- Step 3: Connect as TestUser. 
-- (In SQL*Plus or your preferred Oracle client, use the CONNECT command.)
----------------------------------------------------------------------
CONNECT TestUser/MyPassword;
-- Now you are working in the TestUser schema.

----------------------------------------------------------------------
-- Step 4: List the tables in TestUser's schema (should be empty initially).
----------------------------------------------------------------------
SELECT table_name FROM user_tables;

----------------------------------------------------------------------
-- Step 5: Create a table called EMPLOYEES with an identity column (auto-generated primary key),
-- and columns for name and age.
----------------------------------------------------------------------
CREATE TABLE employees (
    id   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100),
    age  NUMBER
);
-- EMPLOYEES is created with an auto-incrementing column 'id'.

----------------------------------------------------------------------
-- Step 6: Verify that the table was created by listing tables in the schema.
----------------------------------------------------------------------
SELECT table_name FROM user_tables;

----------------------------------------------------------------------
-- Step 7: Insert multiple records into the EMPLOYEES table.
-- Use an INSERT INTO â€¦ SELECT with UNION ALL to ensure each row gets a unique identity value.
----------------------------------------------------------------------
INSERT INTO employees (name, age)
SELECT name, age FROM (
    SELECT 'Alice' AS name, 30 AS age FROM dual
    UNION ALL
    SELECT 'Bob', 25 FROM dual
    UNION ALL
    SELECT 'Charlie', 28 FROM dual
);
-- This inserts three rows into EMPLOYEES.

----------------------------------------------------------------------
-- Step 8: Alter the table to add a new column called DEPARTMENT.
----------------------------------------------------------------------
ALTER TABLE employees ADD (department VARCHAR2(50));
-- The 'department' column will hold additional information.

----------------------------------------------------------------------
-- Step 9: Update records: Set the 'department' to 'HR' for employees with age less than 30.
----------------------------------------------------------------------
UPDATE employees
SET department = 'HR'
WHERE age < 30;

----------------------------------------------------------------------
-- Step 10: Update records to "rename" a data value; for example, change 'Bob' to 'Robert'.
----------------------------------------------------------------------
UPDATE employees
SET name = 'Robert'
WHERE name = 'Bob';

----------------------------------------------------------------------
-- Step 11: Display all records from EMPLOYEES to verify the data.
----------------------------------------------------------------------
SELECT * FROM employees;

----------------------------------------------------------------------
-- Step 12: Rename the table from EMPLOYEES to STAFF.
----------------------------------------------------------------------
RENAME employees TO staff;
-- This renames the table while preserving all the data.

----------------------------------------------------------------------
-- Step 13: Verify the table rename by listing tables in the current schema.
----------------------------------------------------------------------
SELECT table_name FROM user_tables;
-- You should now see STAFF instead of EMPLOYEES.

----------------------------------------------------------------------
-- Step 14: Display the data from the renamed table STAFF.
----------------------------------------------------------------------
SELECT * FROM staff;

----------------------------------------------------------------------
-- Step 15: Delete records from STAFF where the age is greater than 30.
----------------------------------------------------------------------
DELETE FROM staff
WHERE age > 30;

----------------------------------------------------------------------
-- Step 16: Display the remaining records from STAFF after deletion.
----------------------------------------------------------------------
SELECT * FROM staff;

----------------------------------------------------------------------
-- Step 17: Drop the table STAFF.
----------------------------------------------------------------------
DROP TABLE staff;
-- This permanently removes the STAFF table and its data.

----------------------------------------------------------------------
-- Step 18: Disconnect from TestUser and reconnect as a DBA to drop the schema.
-- For example, in SQL*Plus, exit and then reconnect:
----------------------------------------------------------------------
CONNECT sys/MySysPassword AS SYSDBA;
-- Replace MySysPassword with your actual SYS password.

----------------------------------------------------------------------
-- Step 19: Drop the user TestUser (which will delete the associated schema and objects).
----------------------------------------------------------------------
DROP USER TestUser CASCADE;
-- The CASCADE option removes all objects owned by TestUser.

----------------------------------------------------------------------
-- Optional: List users again to confirm that TestUser has been removed.
----------------------------------------------------------------------
SELECT username FROM dba_users;
